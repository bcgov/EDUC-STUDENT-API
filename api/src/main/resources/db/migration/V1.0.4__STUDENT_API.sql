--Add Columns to STUDENT
ALTER TABLE STUDENT ADD (
    GRADE_YEAR VARCHAR2(4),
    DEMOG_CODE VARCHAR2(1),
    STATUS_CODE VARCHAR2(1)
);

-- Column Comments
COMMENT ON COLUMN STUDENT.GRADE_YEAR IS 'Year the student is in for the GRADE field.';
COMMENT ON COLUMN STUDENT.DEMOG_CODE IS 'Student demographic code (Accepted, Confirmed, Frozen).';
COMMENT ON COLUMN STUDENT.STATUS IS 'Status of the student.';

--Create student status code table
CREATE TABLE STUDENT.STUDENT_STATUS_CODE (
  STATUS_CODE VARCHAR2(1) NOT NULL,
  LABEL VARCHAR2(30),
  DESCRIPTION VARCHAR2(255),
  DISPLAY_ORDER NUMBER DEFAULT 1 NOT NULL,
  EFFECTIVE_DATE DATE NOT NULL,
  EXPIRY_DATE DATE NOT NULL,
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_STATUS_CODE_PK PRIMARY KEY (STATUS_CODE)
);

--Create students demog code table
CREATE TABLE STUDENT.STUDENT_DEMOG_CODE (
  DEMOG_CODE VARCHAR2(1) NOT NULL,
  LABEL VARCHAR2(30),
  DESCRIPTION VARCHAR2(255),
  DISPLAY_ORDER NUMBER DEFAULT 1 NOT NULL,
  EFFECTIVE_DATE DATE NOT NULL,
  EXPIRY_DATE DATE NOT NULL,
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_STUDENT_DEMOG_CODE_PK PRIMARY KEY (DEMOG_CODE)
);

--Constraints
alter table STUDENT add constraint FK_STUDENT_STUDENT_STATUS_CODE foreign key (STATUS_CODE) references STUDENT.STUDENT_STATUS_CODE (STATUS_CODE);
alter table STUDENT add constraint FK_STUDENT_STUDENT_DEMOG_CODE foreign key (DEMOG_CODE) references STUDENT.STUDENT_DEMOG_CODE (DEMOG_CODE);

-- Student Demographic & Status Codes
Insert into STUDENT_DEMOG_CODE (DEMOG_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('A','Accepted','Accepted demographic code.',1,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/MVILLENE',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/MVILLENE',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_DEMOG_CODE (DEMOG_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('C','Confirmed','Confirmed demographic code.',2,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/MVILLENE',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/MVILLENE',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_DEMOG_CODE (DEMOG_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('F','Frozen','Frozen demographic code.',3,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/MVILLENE',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/MVILLENE',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_STATUS_CODE (STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('A','Active','Active student',4,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/MVILLENE',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/MVILLENE',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_STATUS_CODE (STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('M','Deceased','Deceased student',4,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/MVILLENE',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/MVILLENE',to_date('2019-11-07','YYYY-MM-DD'));